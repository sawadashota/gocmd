version: 2.1

executors:
  golang-executor:
    docker:
      - image: circleci/golang:1.11.2
    environment:
      GO111MODULE: "on"
      TEST_RESULTS: /tmp/test-results
    working_directory: /go/src/github.com/sawadashota/gocmd

jobs:
  build:
    executor: golang-executor
    steps:
      - checkout
      - restore_cache:
          name: Restore go modules cache
          keys:
            - mod-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "go.mod" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - run:
          name: Install CLIs
          command: |
            go get github.com/jstemmer/go-junit-report
      - save_cache:
          name: Save go modules cache
          key: mod-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod/cache
      - run:
          name: Create binary
          command: go install
      - run:
          name: Test
          command: go test -v -cover ./...
      - run:
          name: Run tests
          command: |
            mkdir -p ${TEST_RESULTS}
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            go test -coverprofile ${TEST_RESULTS}/coverage.txt -v ./... | tee ${TEST_RESULTS}/go-test.out
            go tool cover -html ${TEST_RESULTS}/coverage.txt -o ${TEST_RESULTS}/coverage.html
      - store_artifacts:
          path: /go/src/github.com/sawadashota/gocmd/pprof
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
  release:
    executor: golang-executor
    steps:
      - checkout
      - restore_cache:
          name: Restore go modules cache
          keys:
            - mod-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "go.mod" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - run:
          name: Install goreleaser
          command: go get -u github.com/goreleaser/goreleaser
      - save_cache:
          name: Save go modules cache
          key: mod-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod/cache
      - run:
          name: Release
          command: goreleaser
workflows:
  version: 2
  default:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
